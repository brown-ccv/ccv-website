name: üèóÔ∏è Build, Run Pa11y, & Deploy Preview
on: pull_request

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.CCV_WEBSITE_STATUS_GITHUB_TOKEN }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: üì• Install Dependencies
        run: npm ci

      - name: üîß Install Chromium dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3-dev \
            libatk-bridge2.0-dev \
            libdrm-dev \
            libxcomposite-dev \
            libxdamage-dev \
            libxrandr-dev \
            libgbm-dev \
            libxss-dev \
            libasound2-dev

      - name: üîë Set up Google Cloud Credentials
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: üèóÔ∏è Build
        run: npm run build

      - name: üèÅ Start up app
        run: |
          npm start &
          npx wait-on http://localhost:3000

      - name: ‚ú® Prettify result file
        if: ${{ always() }}
        run: |
          if [ -f pa11y-results.json ]; then
            python -m json.tool pa11y-results.json pretty-pa11y-results.json
          else
            echo '{"status": "success", "message": "No accessibility issues found!", "results": []}' > pretty-pa11y-results.json
          fi

      - name: üëì Read pa11y result file
        if: ${{ always() }}
        id: pa11y_output
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pretty-pa11y-results.json

      - name: ‚ùå Comment on pull request (failure)
        if: ${{ failure() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CCV_WEBSITE_STATUS_GITHUB_TOKEN }}
          header: "pa11y report"
          message: |
            <p><small>Note: This comment gets updated with every commit</small></p>
            <details>
            <summary>
                <p>Git SHA: <code>${{ github.event.pull_request.head.sha }}</code></p>
                <h3>Pa11y test status: <strong>FAIL</strong></h3>
            </summary>
            <pre><code>
            ${{ steps.pa11y_output.outputs.content }}
            </code></pre>
            </details>

      - name: ‚úÖ Comment on pull request (success)
        if: ${{ success() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CCV_WEBSITE_STATUS_GITHUB_TOKEN }}
          header: "pa11y report"
          message: |
            <p><small>Note: This comment gets updated with every commit</small></p>
            <details>
            <summary>
                <p>Git SHA: <code>${{ github.event.pull_request.head.sha }}</code></p>
                <h3>Pa11y test status: <strong>PASS</strong></h3>
            </summary>
            <pre><code>
            ${{ steps.pa11y_output.outputs.content }}
            </code></pre>
            </details>

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    env:
      GH_TOKEN: ${{ secrets.CCV_WEBSITE_STATUS_GITHUB_TOKEN }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      NEXT_PUBLIC_STATIC_EXPORT: "true"
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: üì• Install Dependencies
        run: npm ci

      - name: üîë Set up Google Cloud Credentials
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: üöÄ Deploy Preview
        id: deploy
        run: |
          npm run build

          # Deploy to Firebase Hosting preview channel and capture the output
          DEPLOY_OUTPUT=$(npx firebase-tools hosting:channel:deploy preview-${{ github.event.number }} \
            --project ccv-website-next \
            --token "${{ secrets.FIREBASE_TOKEN }}")

          # Extract the actual channel URL from the output
          PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://ccv-website-next--preview-[^[:space:]]*\.web\.app' | head -1)

          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: üí¨ Comment Preview Link
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CCV_WEBSITE_STATUS_GITHUB_TOKEN }}
          header: "preview deployment"
          message: |
            <p>üöÄ Your preview is ready!</p>
            <p><strong>Preview URL:</strong> <a href="${{ steps.deploy.outputs.preview_url }}" target="_blank">${{ steps.deploy.outputs.preview_url }}</a></p>
            <p><em>This preview will be automatically updated with each new commit to this PR.</em></p>
            </details>
